
mvn repository->Spring-context(5버전중최신링크:jdk11과 호환; 를 pom.xml에 추가)

공공데이터포털(openAPI이써) https://www.data.go.kr/index.do

오픈밴킹(승인받아야권한생김ㅋㅋ) https://www.openbanking.or.kr/main



참고:
스프링:다이나믹웹+메이븐
build하면 target에 jar파일이 생김

bean: 인스턴스 중 스프링이 관리하며 ioc컨테이너 안에 있는 것(싱글톤패턴)

xml비주류가 되어가능,,,현실,,,데신애 annotation 마니 쓴다!

spring은 프록시패턴을 구현함

-----구조

scr/main/resources:classpath:설정파일+mapperxml... (mybatis log4j...)

src/test/java, src/test/resources(!=webapp/resources:정적인 파일:js,html,css,image, controller거치지 않고 갈 수 있는 파일(web-inf는 컨트롤러거쳐야 함))는 빌드시에 제외됨(설정파일)

web=inf/classes:자바가 컴파일 후 이 공간에 들어오게 됨

root_context.xml:기능적인 추가부분에 관한 설정(컨테이너1)
servlet-context.xml:기본세팅, 웹과 관련된 컨테이너에 관한 설정(컨테이너2)

DB====
HikariCP는 connectionpool을 만들어 놓는 것 : 커넥션 풀을 생성하는 것은  이 외에도 라이브러리가 있음

db.properties로 db의 개인정보를 분리함



egov(전자정부
https://www.egovframe.go.kr/home/main.do




form으로 배열 보내귕~~~
<input name="list[0].name">: 쿼리스트링의 name에 어떤 필드의 몇 번째 값인지를 명시해야 함
이것을 vo에서는 객체로 받아야 함(requestparam으로 처리불가)



CONTROLLER++++++++++++++++++++++++++++++++++++
@RequestMapping
@postMapping,@GetMapping,@DeleteMapping@PutMapping
(post는 body를 요구하는데 body가 비어있으면 에러남>body를 채워주자~~)
requestmapping이 아래 4가지를 모두 포괄하나, method를 분명하게 명시하는 아래의 방식이 좀 더 많이 쓰인다.

커맨드객체방식:annotation사용하지 않는 방식, key:value형식의 질의문자열에 대응할 수 있음:get방식이나 form태그(submit)를 이용하여 보내기(json안됨)
@requestparam:객체가 아닌 기본타입의 질의문자열(객체라면 커맨드객체를 사용하여라)
@requestbody:제이슨타입request을 parsing(json아니어도 되긴 한데 parsing이 좀 귀찮대 ㅋㅋ)+get방식불가
@RequestPart쓰려면 fileupload를 위한 bean을 등록해야 함
Model:spring에서 request,response를 합친 객체(request,response를 처리할 때 model을 사용해도 돼:주로 return값이 있을 경우 사용):반환될 때는 분리해서 처리됨










redirect와 forward++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
foward:page호출+전달(서버에서의 process를 client는 알지 못함)>url이 바뀌지 않음 request,response의 정보를 그대로 전달함
redirect:책임전가갓운거,,, (request,response보존x:쿼리스트링을 쓰는 get방식으로 호출을 마니함)

request와response는 1회성임, 요청할 때 마다 만들어짐





=======================================================Json
실제로 객체다? 는 아님
js의 객체형식을 차용했을 뿐(field,value)문자열임=>변환해야 사용할 수 있음
Json(Javascript Object Notation)
Json의 형식:collection(object),list
Json annotation:@requestbody(get방식으로는 불가:get은 body에data없음),@responsebody(json으로 보낼 수 있지만 java객체도 전송가능(string,collection포함))


=====Spring endpoint
RestController는 page반환하지 않고 data반환한당 responsebody안붙여도 됨(따라서 view resolver작동안함)>그래서 controller랑 restcontroller분리해서 사용하면 유지보수하는 데 용이하겟종?



